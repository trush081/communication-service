name: Deploy to DigitalOcean

on:
  push:
    branches: [ "feature/add-deploy-script" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build --build-arg DOPPLER_TOKEN=${{ secrets.DOPPLER_TOKEN }} -t ${{ env.SERVICE_NAME }}:latest .

      - name: Save Docker image to a file
        run: |
          docker save ${{ env.SERVICE_NAME }}:latest | gzip > ${{ env.SERVICE_NAME }}.tar.gz

      - name: Copy Docker image to DigitalOcean Droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_DROPLET_IP }}
          username: ${{ secrets.DO_DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ${{ env.SERVICE_NAME }}.tar.gz
          target: /${{ secrets.DO_DROPLET_USERNAME }}/${{ env.SERVICE_NAME }}.gz

      - name: SSH and Load Docker image on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_DROPLET_IP }}
          username: ${{ secrets.DO_DROPLET_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            gunzip /${{ secrets.DO_DROPLET_USERNAME }}/${{ env.SERVICE_NAME }}.tar.gz
            docker load -i /${{ secrets.DO_DROPLET_USERNAME }}/${{ env.SERVICE_NAME }}.tar
            docker stop ${{ env.SERVICE_NAME }} || true
            docker rm ${{ env.SERVICE_NAME }} || true
            docker run -d --name ${{ env.SERVICE_NAME }} -p 80:8080 ${{ env.SERVICE_NAME }}:latest